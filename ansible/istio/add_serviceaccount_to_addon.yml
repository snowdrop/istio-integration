# Adds ServiceAccount to add-ons that need them and do not have them defined
# This is done in order to avoid giving scc anyuid to the default ServiceAccount

- set_fact:
    add_on_file_path: "{{ istio_dir }}/install/kubernetes/addons/{{ add_on_name }}.yaml"

- name: Determine whether a ServiceAccount is present in the file
  command: grep 'serviceAccountName' {{ add_on_file_path }}
  register: go
  ignore_errors: true

- name: Add ServiceAccount to {{ add_on_name }} add-on
  replace:
    path: "{{ istio_dir }}/install/kubernetes/addons/{{ add_on_name }}.yaml"
    regexp: '^(\s*)containers:\s*$'
    replace: '\1serviceAccountName: istio-{{ add_on_name }}-service-account\n\1containers:'
    backup: yes
  when: go.stdout_lines | length == 0

- set_fact:
    add_on_definition_path: /tmp/{{ add_on_name }}-service-account

- name: Create ServiceAccount definition from template
  template: src=addon_serviceaccount.yml.j2 dest=/tmp/{{ add_on_name }}-service-account

- name: Apply ServiceAccount from template
  command: oc create -f {{add_on_definition_path}}
  ignore_errors: true

